1)call by value
#include<stdio.h>
void main()
{
int a,b;
clrscr();
scanf("%d %d",&a,&b);
c=addition(a,b);
}
int addition(int x,int y)
{
z=x+y;
return z;
getch();
}

2)call by reference
#include<stdio.h>
#include<conio.h>
void main()
{
int a=10,b=20;
clrscr();
swap(&a,&b);
printf("%d%d",a,b);
getch();
}
swap(int *a,int *b)
{
int t;
t=*a;
*a=*b;
*b=t;
printf("%d%d",*a,*b);
return;
}

3)
#include<stdio.h>
int main()
{
char str[10];
clrscr();
printf("main executed");
abc();

getch();
 return;
}
int abc()
{

printf("\nabc executed");
bbc();
return;
}
bbc()
{
printf("\nbbc executed");
return;
}


4)global,local,const,#defineand ternary 
#include<stdio.h>
#define hari 55
int a=10;
void main()
{
int const a=20;
int c=2;

clrscr();
printf("%d",a);
printf("\n%d",hari);
printf("\n%d",(c==2)? 10:30);
printf("\n%d",c);
sample( a);
getch();
}
sample(int  x)
{
x=30;
printf("\n%d",x);
return;
}

5)factorial using recursion
#include<stdio.h>  
int factorial (int n)    
{    
    if ( n < 0)    
        return -1; 
    if (n == 0)    
        return 1; 
    return (n * factorial (n -1));    
}   
int main(){  
    int a;
int fact=0; 
scanf("%d",&a);
fact=factorial(a);

printf("\n factorial of %d is: %d",a,fact);
return 0;  
}   

6)reading from file 
#include<stdio.h>  
#include<conio.h>  
void main(){  
FILE *fp;  
char c;  
clrscr();  
fp=fopen("file.txt","r"); 

  
while((c=fgetc(fp))!=EOF){  
printf("%c",c);  
}  
  
rewind(fp);  
  
while((c=fgetc(fp))!=EOF){  
printf("%c",c);  
}  
  
fclose(fp);    
getch();    
}

7) error handling
#include<stdio.h>
#include<conio.h>
#include<errno.h>
void main()
{

FILE *fp;
clrscr();
fp=fopen("hari.txt","w");
fprintf(fp,"this is sample file");
fputs("\nthis is testing",fp);
printf("erdror code is: %d",errno);
printf("\nerror message :%s",strerror(errno));
perror("\n");
fclose(fpd);
getch();
}

8)pointers 
#include <stdio.h>

int main () {

   int  var = 20;   
   int  *ip;       

   ip = &var;  

   printf("Address of var variable: %x\n", &var  );

   
   printf("Address stored in ip variable: %x\n", ip );

   
   printf("Value of *ip variable: %d\n", *ip );

   return 0;
}

9)enum 
#include<stdio.h>
enum state {a  = 0, b,c};
enum state currstate = 2;
enum state findstate(){
return currstate;
}
int main()
{
clrscr();
(findstate() == a)?printf("working"):printf("not working");
return 0;
}

10)enum
#include <stdio.h>
enum day {sunday = 1, monday=2, tuesday = 3,
          wednesday, thursday = 5, friday, saturday};
 
int main()
{
    printf("%d %d %d %d %d %d %d", sunday, monday, tuesday,
            wednesday, thursday, friday, saturday);
    return 0;
}

11)finding the minimum number
#include<stdio.h>  
int minarray(int arr[],int size){    
int min=arr[0];    
int i=0;    
for(i=1;i<size;i++){    
if(min>arr[i]){    
min=arr[i];    
}    
}  
return min;    
}
    
int main(){      
int i=0,min=0;    
int numbers[]={4,5,7,3,8,9};   
  
min=minarray(numbers,6);   
printf("minimum number is %d \n",min);    
return 0;  
}    

12)command line arguments
#include <stdio.h>


int main(int arga,char *argb[])
{
    int i;
    if( arga>= 2 )
    {
        printf("The arguments supplied are:\n");
        for(i = 1; i < arga;i++)
        {
            printf("%s\t", argb[i]);
        }
    }
    else
    {
        printf("argument list is empty.\n");
    }
    return 0;
}

1)displaying from numbers 10 to 9
#include<stdio.h>

void main()
 {
 
 int i;
  
  for(i=10;i>=0;i--)
 
 printf("%d ",i);
  
 
  
}


2)displaying from z to a
#include<stdio.h>

void main() {
 
 int i;
  
 
 for(i=122;i>=97;i--)
 
 printf("%c ",i);
  
  
 
}

3)to display boolean values
#include<stdio.h>

#define true 1

#define false 0

void main() {
  
  
  
 
 printf("%d\n ",true);
  
printf("%d",false);
  
  
 
}


4)printing from numbers 1 to 10
#include<stdio.h>

int main() {
 
 int i;
  
 
 for(i=1;i<=10;i++)
 
 printf(" %d",i);
  
  
 
}

5)calculating sum of first 10 natural numbers
#include<stdio.h>

int main() {
 
 int i,sum=0;
  
 
 for(i=1;i<=10;i++)
 {
 printf(" %d",i);
 sum=sum+i;
 }
 printf("\nthe sum is: %d",sum);
  
  
 
}

6)sum and average of first 10 natural namubers
#include<stdio.h>

int main() {
 
 int i,arr[10],sum=0;
 float avg;
  
 
 for(i=0;i<10;i++)
 {
 scanf(" %d",&arr[i]);
 printf("number %d :%d\n",i,arr[i]);
 sum=sum+arr[i];
 }
 avg=sum/10;
 printf("\nthe sum is: %d",sum);
 printf("\n average is :%f",avg);
  
  
 
}

7)display the cube of the number up to the given integer
#include<stdio.h>

int main() {
 
int n,i,j;
scanf("%d",&n);
for(i=1;i<=n;i++)
{
j=i*i*i;
printf("number is %d and cube of %d is :%d\n",i,i,j);
}
 
}

8)displaying the pattern like right angle triangle which will repeat a number in a row
#include <stdio.h>
int main()
{
    int i, j,k, rows;

    printf("Enter number of rows: \n");
    scanf("%d",&rows);

    for(i=1; i<=rows; ++i)
    {
        for(j=1; j<=i; ++j)
    
        {
            printf("%d ",i);
        }
        printf("\n");
    }
    return 0;
}

9)program to convert string to long integer
#include <stdio.h>
#include<stdlib.h>
int main()
{
    char *string = "1234",*endptr;
    long lnumber;
    lnumber=strtol(string,&endptr,10);
    printf("string=%s long= %l\n",string,lnumber);
    
}

10)accept two numbers and check weather they are same are not
#include<stdio.h>

int main() {
   int x,y;
   scanf("%d%d",&x,&y);
   if(x==y)
   
   printf("x and y are equal");


}


11)check weather given number is positive or negative
#include<stdio.h>

int main() {
  int n;
  scanf("%d",&n);
  if(n>=0)
  printf("given number is positive");
  else
  printf("given number is negative");

}


12)generation of electricity bill
#include<stdio.h>

int main() {
    char name[10];
    int id,units;
    float bill;
    
   /* scanf("%d",&id);
    scanf("%c",&name);*/
    scanf("%d",&units);
    if(units<200){
    bill=units*1.20;
    }
    else if(units>=200 && units<400){
        
    bill=units*1.50;
    }
    else if(units>=400 && units<600){
    bill = 1.80*units;
    }
    else if(units>=600){
    bill= units*200;
    }
    else{
    bill=100;
    }
    if (bill>400)
    {
    bill=0.15*bill+bill;
 printf("%f",bill);
}
else if (bill<100)
{
    bill=100;
    printf("%f",bill);
}
}

13)check weather a triangle is equilateral,isosseles or scalene
#include<stdio.h>

int main() {
   int x,y,z;
   scanf("%d%d%d",&x,&y,&z);
   if(x==y && y==z && z==x)
   printf("its equilateral");
   else if(x!=y && y!=z && z!=x)
   printf("its scalene");
   else
   printf("its isosseles");
}


14)check weather a character is an alphabet,numeric or special character
#include<stdio.h>

int main() {
    char ch;
       
    
    scanf("%c",&ch);

    if((ch>='A'&&ch<='Z')||(ch>='a'&&ch<='z'))
        printf("nYou have entered an alphabet");
    else
        if(ch>='0'&&ch<='9')
            printf("nYou have entered a digit");
        else
            printf("nYou have entered a special character");

}
